> x <- rbinom(25,5,.5)          # generate 25 random numbers

> dim(x) <- c(5,5)              # make square matrix

> myi <- makeCacheMatrix(x)     # init caching object

> x %*% cacheSolve(myi)         # invert (1st w/o chaching)
     [,1]         [,2]          [,3]          [,4]         [,5]
[1,]    1 5.551115e-17  9.251859e-17  9.251859e-17 0.000000e+00
[2,]    0 1.000000e+00 -3.700743e-17 -3.700743e-17 4.440892e-16
[3,]    0 0.000000e+00  1.000000e+00 -8.326673e-17 4.440892e-16
[4,]    0 1.110223e-16  9.251859e-17  1.000000e+00 2.220446e-16
[5,]    0 0.000000e+00  1.387779e-16  1.387779e-16 1.000000e+00

> x %*% cacheSolve(myi)         # this time cached
getting cached data
     [,1]         [,2]          [,3]          [,4]         [,5]
[1,]    1 5.551115e-17  9.251859e-17  9.251859e-17 0.000000e+00
[2,]    0 1.000000e+00 -3.700743e-17 -3.700743e-17 4.440892e-16
[3,]    0 0.000000e+00  1.000000e+00 -8.326673e-17 4.440892e-16
[4,]    0 1.110223e-16  9.251859e-17  1.000000e+00 2.220446e-16
[5,]    0 0.000000e+00  1.387779e-16  1.387779e-16 1.000000e+00

> myi <- makeCacheMatrix(x)     # re-init, clearing cache

> x %*% cacheSolve(myi)         # no caching this time
     [,1]         [,2]          [,3]          [,4]         [,5]
[1,]    1 5.551115e-17  9.251859e-17  9.251859e-17 0.000000e+00
[2,]    0 1.000000e+00 -3.700743e-17 -3.700743e-17 4.440892e-16
[3,]    0 0.000000e+00  1.000000e+00 -8.326673e-17 4.440892e-16
[4,]    0 1.110223e-16  9.251859e-17  1.000000e+00 2.220446e-16
[5,]    0 0.000000e+00  1.387779e-16  1.387779e-16 1.000000e+00

> x %*% cacheSolve(myi)         # cached on second call
getting cached data
     [,1]         [,2]          [,3]          [,4]         [,5]
[1,]    1 5.551115e-17  9.251859e-17  9.251859e-17 0.000000e+00
[2,]    0 1.000000e+00 -3.700743e-17 -3.700743e-17 4.440892e-16
[3,]    0 0.000000e+00  1.000000e+00 -8.326673e-17 4.440892e-16
[4,]    0 1.110223e-16  9.251859e-17  1.000000e+00 2.220446e-16
[5,]    0 0.000000e+00  1.387779e-16  1.387779e-16 1.000000e+00
